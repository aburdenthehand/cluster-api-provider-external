apiVersion: "cluster.k8s.io/v1alpha1"
kind: Cluster
metadata:
  name: demo-cluster
spec:
    providerConfig:
      value:
        apiVersion: "externalproviderconfig/v1alpha1"
        kind: "ExternalClusterProviderConfig"
        project: "demo"
---
apiVersion: "cluster.k8s.io/v1alpha1"
kind: Machine
metadata:
  name: had-14.ha.lab.eng.bos.redhat.com
  labels:
    set: worker
spec:
  versions:
    kubelet: 1.9.4
    controlPlane: 1.9.4
  providerConfig:
    value:
      apiVersion: "externalproviderconfig/v1alpha1"
      kind: "ExternalMachineProviderConfig"
      roles:
      - worker
      zone: "fenced"
      machineType: "n1-standard-2"
      os: "centos-7"
---
apiVersion: "cluster.k8s.io/v1alpha1"
kind: Machine
metadata:
  name: had-15.ha.lab.eng.bos.redhat.com
  labels:
    set: worker
spec:
  versions:
    kubelet: 1.9.4
    controlPlane: 1.9.4
  providerConfig:
    value:
      apiVersion: "externalproviderconfig/v1alpha1"
      kind: "ExternalMachineProviderConfig"
      roles:
      - worker
      zone: "fenced"
      machineType: "n1-standard-2"
      os: "centos-7"
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ipmi-secret
data:
  username: cm9vdAo=
  password: Y2FsdmluCg==
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: machine-setup
data:
  machine_setup_configs.yaml: |-
    items:
    - machineParams:
      - os: centos-7
        roles:
        - worker
        versions:
          kubelet: 1.9.4
          controlPlane: 1.9.4
      image: centos:centos-7
      metadata:
        startupScript: |
          set -ex
          (
          echo done.
          ) 2>&1 | tee /var/log/startup.log
        crudPrimitives:
          name: had-drac
          container:
            name: fence-agents
            image: quay.io/beekhof/fence-agents:0.0.11
            command: [ "/bin/secret-handler.sh", "/sbin/fence_ipmilan", "-v" ]
          checkArgs:  [ "-o", "status" ]
          createArgs: [ "-o", "on"  ]
          deleteArgs: [ "-o", "off" ]
          argumentFormat: cli
          passTargetAs: port
          dynamicConfig:
            - field: ip
              values:
                had-14.ha.lab.eng.bos.redhat.com: had-14-drac
                had-15.ha.lab.eng.bos.redhat.com: had-15-drac
              # Aspirational replacement...
              # transform:
              #   sourcePattern: .ha.lab.eng.bos.redhat.com
              #   replacePattern: -drac
          secrets:
            username: ipmi-secret
            password: ipmi-secret
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: clusterapi-controllers
  labels:
    api: clusterapi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        api: clusterapi
    spec:
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/notReady
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/unreachable
        operator: Exists
      containers:
      - name: machine-controller
        image: quay.io/beekhof/external-controller:0.0.16
        volumeMounts:
          - name: machine-setup
            mountPath: /etc/machinesetup
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        command:
        - "/bin/external-controller"
        args:
        - --machinesetup=/etc/machinesetup/machine_setup_configs.yaml
        - --controller=machine
      - name: cluster-controller
        image: quay.io/beekhof/external-controller:0.0.16
        volumeMounts:
          - name: machine-setup
            mountPath: /etc/machinesetup
        command:
        - "/bin/external-controller"
        args:
        - --controller=cluster
      volumes:
      - name: machine-setup
        configMap:
          name: machine-setup

