apiVersion: "cluster.k8s.io/v1alpha1"
kind: Cluster
metadata:
  name: demo-cluster
spec:
    providerConfig:
      value:
        apiVersion: "externalproviderconfig/v1alpha1"
        kind: "ExternalClusterProviderConfig"
        project: "demo"
---
apiVersion: "cluster.k8s.io/v1alpha1"
kind: Machine
metadata:
  name: had-14.ha.lab.eng.bos.redhat.com
  labels:
    set: worker
spec:
  providerConfig:
    value:
      apiVersion: "externalproviderconfig/v1alpha1"
      kind: "ExternalMachineProviderConfig"
      fencingConfig:
        name: inline
        container:
          name: baremetal-fencing
          image: quay.io/beekhof/fence-agents:0.0.2
          volumeMounts:
            - name: fake-node-status      
              mountPath: /mnt 
              readOnly: false
        volumes:
          - name: fake-node-status    
            persistentVolumeClaim:
              claimName: fake-fencing-vol
        checkArgs:  [ "/bin/fence_lockfile", "-x", "--lockdir", "/mnt", "-o", "status" ]
        createArgs: [ "/bin/fence_lockfile", "-x", "--lockdir", "/mnt", "-o", "on"  ]
        deleteArgs: [ "/bin/fence_lockfile", "-x", "--lockdir", "/mnt", "-o", "off" ]
        argumentFormat: cli
        passTargetAs: target
        secrets:
          password: ipmi-secret

---
apiVersion: "cluster.k8s.io/v1alpha1"
kind: Machine
metadata:
  name: had-15.ha.lab.eng.bos.redhat.com
  labels:
    set: worker
spec:
  providerConfig:
    value:
      apiVersion: "externalproviderconfig/v1alpha1"
      kind: "ExternalMachineProviderConfig"
      fencingConfig:
        name: inline
        container:
          name: baremetal-fencing
          image: quay.io/beekhof/fence-agents:0.0.2
          volumeMounts:
            - name: fake-node-status      
              mountPath: /mnt 
              readOnly: false
        volumes:
          - name: fake-node-status    
            persistentVolumeClaim:
              claimName: fake-fencing-vol
        checkArgs:  [ "/bin/fence_lockfile", "-x", "--lockdir", "/mnt", "-o", "status" ]
        createArgs: [ "/bin/fence_lockfile", "-x", "--lockdir", "/mnt", "-o", "on"  ]
        deleteArgs: [ "/bin/fence_lockfile", "-x", "--lockdir", "/mnt", "-o", "off" ]
        argumentFormat: cli
        passTargetAs: target
        secrets:
          password: ipmi-secret
---
apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ipmi-secret
data:
  username: cm9vdAo=
  password: Y2FsdmluCg==
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: clusterapi-controllers
  labels:
    api: clusterapi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        api: clusterapi
    spec:
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/notReady
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/unreachable
        operator: Exists
      containers:
      - name: machine-controller
        image: docker.io/kubevirt/cluster-api-external-provider:latest
        command:
        - "/usr/bin/external-controller"
        imagePullPolicy: Always
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
