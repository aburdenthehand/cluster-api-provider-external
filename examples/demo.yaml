apiVersion: v1
kind: Secret
type: Opaque
metadata:
  name: ipmi-secret
data:
  password: dmFsdWUtMg0K
  username: dmFsdWUtMQ0K
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: machine-setup
data:
  machine_setup_configs.yaml: |-
    items:
    - machineParams:
      - os: ubuntu-1604-lts
        roles:
        - Master
        versions:
          kubelet: 1.9.4
          controlPlane: 1.9.4
      image: projects/ubuntu-os-cloud/global/images/family/ubuntu-1604-lts
      metadata:
        startupScript: |
          set -ex
          (
          echo done.
          ) 2>&1 | tee /var/log/startup.log
        crudPrimitives:
          container:
            name: baremetal-fencing
            image: quay.io/beekhof/fence-agents:latest
          createCmd: [ "/bin/echo", "/sbin/fence_ipmilan", "--user", "admin", "-o", "on" ]
          deleteCmd: [ "/bin/echo", "/sbin/fence_ipmilan", "--user", "admin", "-o", "off" ]
          argumentFormat: cli
          passTargetAs: port
          dynamicConfig:
            field: ip
            default: 1.2.3.6
            values:
            - hostA: 1.2.3.4
            - hostB: 1.2.3.5
          secrets:
          - password: ipmi-secret
---
apiVersion: "cluster.k8s.io/v1alpha1"
kind: Machine
metadata:
  generateName: demo-echo-
  labels:
    set: master
spec:
  versions:
    kubelet: 1.9.4
    controlPlane: 1.9.4
  providerConfig:
    value:
      apiVersion: "extproviderconfig/v1alpha1"
      kind: "ExtMachineProviderConfig"
      roles:
      - Master
      zone: "$ZONE"
      machineType: "n1-standard-2"
      os: "ubuntu-1604-lts"
      crudPrimitives:
        container:
          name: baremetal-fencing
          image: quay.io/beekhof/fence-agents:latest
        createCmd: [ "/bin/echo", "/sbin/fence_ipmilan", "--user", "admin", "-o", "on", "--ip", "1.2.3.4" ]
        deleteCmd: [ "/bin/echo", "/sbin/fence_ipmilan", "--user", "admin", "-o", "off", "--ip", "1.2.3.4" ]
        argumentFormat: cli
        passTargetAs: port
        secrets:
        - password: ipmi-secret
---
apiVersion: "cluster.k8s.io/v1alpha1"
kind: Cluster
metadata:
  name: demo-cluster
spec:
    providerConfig:
      value:
        apiVersion: "extproviderconfig/v1alpha1"
        kind: "ExtClusterProviderConfig"
        project: "demo"
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: clusterapi-controllers
  labels:
    api: clusterapi
spec:
  replicas: 1
  template:
    metadata:
      labels:
        api: clusterapi
    spec:
      # nodeSelector:
      #   node-role.kubernetes.io/master: ""
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/notReady
        operator: Exists
      - effect: NoExecute
        key: node.alpha.kubernetes.io/unreachable
        operator: Exists
      containers:
      # - name: controller-manager
      #   image: gcr.io/k8s-cluster-api/controller-manager:0.0.8
      #   volumeMounts:
      #     - name: config
      #       mountPath: /etc/kubernetes
      #     - name: certs
      #       mountPath: /etc/ssl/certs
      #   command:
      #   - "./controller-manager"
      #   args:
      #   - --kubeconfig=/etc/kubernetes/admin.conf
      - name: machine-controller
        image: quay.io/beekhof/external-controller:0.0.1
        volumeMounts:
          - name: machine-setup
            mountPath: /etc/machinesetup
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        command:
        - "/root/go/bin/external-controller"
        args:
        - --machinesetup=/etc/machinesetup/machine_setup_configs.yaml
        - --controller=machine
      - name: cluster-controller
        image: quay.io/beekhof/external-controller:0.0.1
        volumeMounts:
          - name: machine-setup
            mountPath: /etc/machinesetup
        command:
        - "/root/go/bin/external-controller"
        args:
        - --controller=cluster
      volumes:
      - name: machine-setup
        configMap:
          name: machine-setup
